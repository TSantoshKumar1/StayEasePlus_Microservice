server:
  port: 8081

spring:
  datasource:
    url: jdbc:mysql://localhost:3306/microservices
    username: root
    password: santosh1998$
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
  application:
    name: USER-SERVICE
  config:
    import: optional:configserver:http://localhost:8085
  security:
   oauth2:
    resourceserver:
      jwt:
        issuer-uri: your issuer uri
    client:
      registration:
        my-internal-client:
          provider: okta
          authorization-grant-type: client_credentials
        scope: internal,email,profile
        client-id: your client id
        client-secret: your client secret
#-------------------------------------------
# eureka client configuration.........
#eureka:
#  instance:
#    prefer-ip-address: true
#  client:
#    register-with-eureka: true
#    fetch-registry: true
#    service-url:
#      defaultZone: http://localhost:8761/eureka

# acutator configuration.....
management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health

  endpoint:
    health:
      show-details: ALWAYS

# resilence4j configuration for circuitBreaker......

resilience4j:
  circuitbreaker:
    instances:
      ratingHotelBreaker:
        register-health-indicator: true
        event-consumer-buffer-size: 10
        failure-rate-threshold: 50
        minimum-number-of-calls: 5
        automatic-transition-from-open-to-half-open-enabled: true
        wait-duration-in-open-state: 6s
        permitted-number-of-calls-in-half-open-state: 3
        sliding-window-size: 10
        sliding-window-type: COUNT_BASED

#   resilence4j configuration for retry........

  retry:
    instances:
      ratingHotelService:
        max-attempts: 3
        wait-duration: 3s

#   resilence4j configuration for RateLimiter......

  ratelimiter:
    instances:
      userRateLimiter:
        limit-refresh-period: 4s
        limit-for-period: 2
        timeout-duration: 2s

# okta configuration....

okta:
  oauth2:
    issuer: https://dev-56654283.okta.com/oauth2/default
    audience: api://default



#  security:
#    oauth2:
#      resourceserver:
#        jwt:
#          issuer-uri:  https://dev-56654283.okta.com/oauth2/default

# okta oauth2 client configuration....
#      client:
#        registration:
#          my-internal-client:
#            provider: okta
#            authorization-grant-type: client-credentials
#          client-id:
#          client-secret:
#          scope: internal
#        provider:
#          okta:
#            issuer-uri:  https://dev-56654283.okta.com/oauth2/default

#--------------------------------------------------------------------

